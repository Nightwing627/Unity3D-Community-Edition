<?php

namespace Tests\Todo\Feature\Http\Controllers\Staff;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Staff\UserController
 */
class UserControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post(route('user_edit', ['username' => $user->username]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withErrors('You Are Not Authorized To Perform This Action!'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('user_search'));

        $response->assertOk();
        $response->assertViewIs('Staff.user.user_search');
        $response->assertViewHas('users');
        $response->assertViewHas('uploaders');
        $response->assertViewHas('mods');
        $response->assertViewHas('admins');
        $response->assertViewHas('coders');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function permissions_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post(route('user_permissions', ['username' => $user->username]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withSuccess('Account Permissions Successfully Edited'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function search_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('user_results'));

        $response->assertOk();
        $response->assertViewIs('Staff.user.user_results');
        $response->assertViewHas('users');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function settings_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();
        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('user_setting', ['username' => $user->username]));

        $response->assertOk();
        $response->assertViewIs('Staff.user.user_edit');
        $response->assertViewHas('user');
        $response->assertViewHas('groups');
        $response->assertViewHas('notes');

        // TODO: perform additional assertions
    }

    // test cases...
}
